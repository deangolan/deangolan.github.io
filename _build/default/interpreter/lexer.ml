# 1 "interpreter/lexer.mll"
 
open Parser

exception SyntaxError of string

# 8 "interpreter/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\229\255\230\255\043\000\052\000\013\000\053\000\065\000\
    \000\000\052\000\242\255\087\000\001\000\000\000\246\255\001\000\
    \247\255\012\000\248\255\249\255\250\255\251\255\252\255\253\255\
    \254\255\034\000\031\000\002\000\029\000\046\000\040\000\034\000\
    \049\000\245\255\001\000\244\255\050\000\241\255\043\000\048\000\
    \040\000\055\000\240\255\057\000\001\000\239\255\050\000\045\000\
    \057\000\051\000\047\000\233\255\060\000\002\000\238\255\061\000\
    \054\000\057\000\002\000\237\255\062\000\234\255\065\000\235\255\
    \060\000\000\000\236\255\060\000\072\000\080\000\071\000\079\000\
    \004\000\080\000\080\000\074\000\088\000\076\000\088\000\087\000\
    \231\255\089\000\232\255\073\000\076\000\001\000\005\000\081\000\
    \082\000\084\000\094\000\086\000\082\000\090\000\098\000\090\000\
    \086\000";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\255\255\012\000\025\000\025\000\255\255\025\000\
    \255\255\025\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\001\000\001\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\022\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default =
   "\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\000\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\027\000\027\000\027\000\027\000\000\000\027\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \027\000\086\000\027\000\000\000\000\000\000\000\016\000\000\000\
    \022\000\021\000\000\000\000\000\010\000\013\000\034\000\015\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\023\000\018\000\012\000\000\000\033\000\035\000\
    \000\000\005\000\000\000\006\000\004\000\042\000\019\000\000\000\
    \000\000\007\000\000\000\000\000\008\000\003\000\045\000\054\000\
    \009\000\059\000\073\000\066\000\020\000\088\000\000\000\000\000\
    \000\000\087\000\000\000\000\000\017\000\016\000\000\000\000\000\
    \058\000\024\000\024\000\024\000\024\000\024\000\025\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\026\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\082\000\018\000\065\000\014\000\080\000\
    \057\000\061\000\063\000\030\000\053\000\044\000\037\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\028\000\029\000\020\000\031\000\032\000\019\000\038\000\
    \039\000\040\000\081\000\041\000\037\000\064\000\046\000\045\000\
    \047\000\048\000\049\000\062\000\052\000\043\000\036\000\050\000\
    \051\000\055\000\056\000\054\000\060\000\059\000\068\000\067\000\
    \066\000\075\000\070\000\071\000\072\000\074\000\069\000\063\000\
    \076\000\077\000\078\000\079\000\061\000\083\000\084\000\085\000\
    \093\000\089\000\090\000\091\000\092\000\082\000\094\000\095\000\
    \096\000\080\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\027\000\027\000\000\000\255\255\027\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\085\000\027\000\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\255\255\255\255\000\000\000\000\012\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\017\000\000\000\255\255\013\000\034\000\
    \255\255\000\000\255\255\000\000\000\000\008\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\000\000\000\000\044\000\053\000\
    \000\000\058\000\072\000\065\000\000\000\086\000\255\255\255\255\
    \255\255\086\000\255\255\255\255\000\000\015\000\255\255\255\255\
    \005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\004\000\000\000\003\000\
    \005\000\004\000\004\000\025\000\006\000\007\000\009\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\026\000\028\000\029\000\030\000\031\000\032\000\036\000\
    \038\000\039\000\003\000\040\000\041\000\004\000\043\000\046\000\
    \046\000\047\000\048\000\004\000\006\000\007\000\009\000\049\000\
    \050\000\052\000\055\000\056\000\057\000\060\000\062\000\064\000\
    \067\000\068\000\069\000\070\000\071\000\073\000\062\000\074\000\
    \075\000\076\000\077\000\078\000\079\000\081\000\083\000\084\000\
    \087\000\088\000\089\000\090\000\091\000\092\000\093\000\094\000\
    \095\000\096\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec read lexbuf =
   __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 21 "interpreter/lexer.mll"
                 ( read lexbuf )
# 165 "interpreter/lexer.ml"

  | 1 ->
# 22 "interpreter/lexer.mll"
           ( ATOM (Lexing.lexeme lexbuf) )
# 170 "interpreter/lexer.ml"

  | 2 ->
# 23 "interpreter/lexer.mll"
          ( COLON )
# 175 "interpreter/lexer.ml"

  | 3 ->
# 24 "interpreter/lexer.mll"
          ( LPAREN )
# 180 "interpreter/lexer.ml"

  | 4 ->
# 25 "interpreter/lexer.mll"
          ( RPAREN )
# 185 "interpreter/lexer.ml"

  | 5 ->
# 26 "interpreter/lexer.mll"
            ( BOOL true )
# 190 "interpreter/lexer.ml"

  | 6 ->
# 27 "interpreter/lexer.mll"
             ( BOOL false )
# 195 "interpreter/lexer.ml"

  | 7 ->
# 28 "interpreter/lexer.mll"
          ( OR )
# 200 "interpreter/lexer.ml"

  | 8 ->
# 29 "interpreter/lexer.mll"
           ( AND )
# 205 "interpreter/lexer.ml"

  | 9 ->
# 30 "interpreter/lexer.mll"
          ( NOT )
# 210 "interpreter/lexer.ml"

  | 10 ->
# 31 "interpreter/lexer.mll"
          ( IMP )
# 215 "interpreter/lexer.ml"

  | 11 ->
# 32 "interpreter/lexer.mll"
          ( IFF )
# 220 "interpreter/lexer.ml"

  | 12 ->
# 33 "interpreter/lexer.mll"
                 ( INT (int_of_string (Lexing.lexeme lexbuf)) )
# 225 "interpreter/lexer.ml"

  | 13 ->
# 34 "interpreter/lexer.mll"
          ( COMMA )
# 230 "interpreter/lexer.ml"

  | 14 ->
# 35 "interpreter/lexer.mll"
                       ( PR )
# 235 "interpreter/lexer.ml"

  | 15 ->
# 36 "interpreter/lexer.mll"
           ( LE )
# 240 "interpreter/lexer.ml"

  | 16 ->
# 37 "interpreter/lexer.mll"
                     ( IDM )
# 245 "interpreter/lexer.ml"

  | 17 ->
# 38 "interpreter/lexer.mll"
                      ( COM )
# 250 "interpreter/lexer.ml"

  | 18 ->
# 39 "interpreter/lexer.mll"
                     ( ASO )
# 255 "interpreter/lexer.ml"

  | 19 ->
# 40 "interpreter/lexer.mll"
                     ( DIS )
# 260 "interpreter/lexer.ml"

  | 20 ->
# 41 "interpreter/lexer.mll"
                         ( DN )
# 265 "interpreter/lexer.ml"

  | 21 ->
# 42 "interpreter/lexer.mll"
                         ( DM )
# 270 "interpreter/lexer.ml"

  | 22 ->
# 43 "interpreter/lexer.mll"
                        ( ID )
# 275 "interpreter/lexer.ml"

  | 23 ->
# 44 "interpreter/lexer.mll"
                            ( MP )
# 280 "interpreter/lexer.ml"

  | 24 ->
# 45 "interpreter/lexer.mll"
                            ( MT )
# 285 "interpreter/lexer.ml"

  | 25 ->
# 46 "interpreter/lexer.mll"
        ( raise (SyntaxError ("Unexpected character: " ^ Lexing.lexeme lexbuf)) )
# 290 "interpreter/lexer.ml"

  | 26 ->
# 47 "interpreter/lexer.mll"
          ( EOF )
# 295 "interpreter/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

;;

