// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cmo, use-js-string=true, version=5.5.2

//# unitInfo: Provides: Dune__exe__Rules
//# unitInfo: Requires: Stdlib__Hashtbl
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, caml_equal = runtime.caml_equal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_Hashtbl = global_data.Stdlib__Hashtbl,
    _b_ = [0, 737456202, 0],
    _a_ = [0, 737456202, 1];
   function check(pattern, p, q){
    var p$0 = p, q$0 = q;
    for(;;){
     var _bL_ = caml_call2(pattern, p$0, q$0);
     if(_bL_)
      var _bM_ = _bL_;
     else{
      if(typeof p$0 !== "number"){
       var _bN_ = p$0[1];
       if(3903731 === _bN_){
        if(typeof q$0 !== "number" && 3903731 === q$0[1]){
         var q$1 = q$0[2], p$1 = p$0[2], p$0 = p$1, q$0 = q$1;
         continue;
        }
       }
       else if
        (748545548 === _bN_ && typeof q$0 !== "number" && 748545548 === q$0[1]){
        var
         _bO_ = q$0[2],
         q2 = _bO_[3],
         p2 = _bO_[2],
         conn2 = _bO_[1],
         match = p$0[2],
         q1 = match[3],
         p1 = match[2],
         conn1 = match[1];
        if(conn1 === conn2){
         var
          _bP_ = check(pattern, p1, p2),
          _bQ_ = _bP_ || check(pattern, q1, q2);
         if(_bQ_)
          var _bR_ = caml_equal(p1, p2), _bS_ = _bR_ || caml_equal(q1, q2);
         else
          var _bS_ = _bQ_;
         return _bS_;
        }
       }
      }
      var _bM_ = 0;
     }
     return _bM_;
    }
   }
   function is_valid(getline, linenum){
    function getprop(linenum){return caml_call1(getline, linenum)[1];}
    var _bB_ = caml_call1(getline, linenum), match = _bB_[2], prop = _bB_[1];
    if(typeof match === "number") return 1;
    var _bC_ = match[1];
    if(179928923 > _bC_){
     if(-641755978 === _bC_){
      var a$5 = match[2];
      return check(doublenegation, getprop(a$5), prop);
     }
     if(-530603023 <= _bC_){
      if(17017 <= _bC_){
       var a$6 = match[2];
       return check(le, getprop(a$6), prop);
      }
      var a$7 = match[2];
      return check(associative, getprop(a$7), prop);
     }
     if(-608679825 > _bC_){
      var a$9 = match[2];
      return check(commutative, getprop(a$9), prop);
     }
     var
      match$1 = match[2],
      b$0 = match$1[2],
      a$8 = match$1[1],
      p2$0 = getprop(b$0),
      p1$0 = getprop(a$8);
     if(typeof p1$0 !== "number" && 748545548 === p1$0[1]){
      var _bH_ = p1$0[2], _bI_ = _bH_[1];
      if
       (typeof _bI_ === "number"
        &&
         814983936 === _bI_ && typeof p2$0 !== "number" && 3903731 === p2$0[1]){
       var
        p2$1 = p2$0[2],
        p1$2 = _bH_[3],
        q1$0 = _bH_[2],
        _bJ_ = caml_equal(p1$2, p2$1),
        _bK_ = _bJ_ ? caml_equal(q1$0, [0, 3903731, prop]) : _bJ_;
       return _bK_;
      }
     }
     return 0;
    }
    if(316735838 <= _bC_){
     if(463545110 <= _bC_){
      if(696721332 <= _bC_){
       var a = match[2];
       return check(distributive, getprop(a), prop);
      }
      var a$0 = match[2];
      return check(dominance, getprop(a$0), prop);
     }
     if(402400965 <= _bC_){
      var a$1 = match[2];
      return check(demorgans, getprop(a$1), prop);
     }
     var a$2 = match[2];
     return check(identity, getprop(a$2), prop);
    }
    if(282006685 <= _bC_){
     var a$3 = match[2];
     return check(idempotence, getprop(a$3), prop);
    }
    var
     match$0 = match[2],
     b = match$0[2],
     a$4 = match$0[1],
     p2 = getprop(b),
     p1 = getprop(a$4);
    if(typeof p1 !== "number" && 748545548 === p1[1]){
     var _bD_ = p1[2], _bE_ = _bD_[1];
     if(typeof _bE_ === "number" && 814983936 === _bE_){
      var
       q1 = _bD_[3],
       p1$1 = _bD_[2],
       _bF_ = caml_equal(p1$1, p2),
       _bG_ = _bF_ ? caml_equal(q1, prop) : _bF_;
      return _bG_;
     }
    }
    return 0;
   }
   function le(p, q){
    a:
    if(typeof p !== "number" && 748545548 === p[1]){
     var _a9_ = p[2], _a__ = _a9_[1];
     b:
     {
      if(3653065 <= _a__){
       if(814983936 <= _a__){
        if(typeof q === "number") break a;
        if(748545548 !== q[1]) break a;
        var _a$_ = q[2], _ba_ = _a$_[1];
        if(typeof _ba_ !== "number") break a;
        if(17731 !== _ba_) break a;
        var _bb_ = _a$_[2];
        if(typeof _bb_ === "number") break a;
        if(3903731 !== _bb_[1]) break a;
        var q2 = _a$_[3], p2 = _bb_[2], q1 = _a9_[3], p1 = _a9_[2];
        break b;
       }
       if(typeof q === "number") break a;
       if(748545548 !== q[1]) break a;
       var _be_ = q[2], _bf_ = _be_[1];
       if(typeof _bf_ !== "number") break a;
       if(3257015 !== _bf_) break a;
       var _bg_ = _be_[2];
       if(typeof _bg_ === "number") break a;
       if(748545548 !== _bg_[1]) break a;
       var _bh_ = _bg_[2], _bi_ = _bh_[1];
       if(typeof _bi_ !== "number") break a;
       if(814983936 !== _bi_) break a;
       var _bj_ = _be_[3];
       if(typeof _bj_ === "number") break a;
       if(748545548 !== _bj_[1]) break a;
       var _bk_ = _bj_[2], _bl_ = _bk_[1];
       if(typeof _bl_ !== "number") break a;
       if(814983936 !== _bl_) break a;
       var
        p3 = _bk_[3],
        q3 = _bk_[2],
        q2$0 = _bh_[3],
        p2$0 = _bh_[2],
        q1$0 = _a9_[3],
        p1$0 = _a9_[2];
      }
      else{
       if(3257015 > _a__){
        var _by_ = _a9_[2];
        if(typeof _by_ === "number") break a;
        if(3903731 !== _by_[1]) break a;
        if(typeof q === "number") break a;
        if(748545548 !== q[1]) break a;
        var _bz_ = q[2], _bA_ = _bz_[1];
        if(typeof _bA_ !== "number") break a;
        if(814983936 !== _bA_) break a;
        var q2 = _a9_[3], p2 = _by_[2], q1 = _bz_[3], p1 = _bz_[2];
        break b;
       }
       var _bq_ = _a9_[2];
       if(typeof _bq_ === "number") break a;
       if(748545548 !== _bq_[1]) break a;
       var _br_ = _bq_[2], _bs_ = _br_[1];
       if(typeof _bs_ !== "number") break a;
       if(814983936 !== _bs_) break a;
       var _bt_ = _a9_[3];
       if(typeof _bt_ === "number") break a;
       if(748545548 !== _bt_[1]) break a;
       var _bu_ = _bt_[2], _bv_ = _bu_[1];
       if(typeof _bv_ !== "number") break a;
       if(814983936 !== _bv_) break a;
       if(typeof q === "number") break a;
       if(748545548 !== q[1]) break a;
       var _bw_ = q[2], _bx_ = _bw_[1];
       if(typeof _bx_ !== "number") break a;
       if(3653065 !== _bx_) break a;
       var
        p3 = _bu_[3],
        q3 = _bu_[2],
        q2$0 = _br_[3],
        p2$0 = _br_[2],
        q1$0 = _bw_[3],
        p1$0 = _bw_[2];
      }
      var _bm_ = caml_equal(p1$0, p2$0);
      if(_bm_){
       var _bn_ = caml_equal(p2$0, p3);
       if(_bn_)
        var
         _bo_ = caml_equal(q1$0, q2$0),
         _bp_ = _bo_ ? caml_equal(q2$0, q3) : _bo_;
       else
        var _bp_ = _bn_;
      }
      else
       var _bp_ = _bm_;
      return _bp_;
     }
     var _bc_ = caml_equal(p1, p2), _bd_ = _bc_ ? caml_equal(q1, q2) : _bc_;
     return _bd_;
    }
    return 0;
   }
   function idempotence(p, q){
    a:
    if(typeof p !== "number" && 748545548 === p[1]){
     var _a7_ = p[2], _a8_ = _a7_[1];
     if(typeof _a8_ === "number"){
      if(17731 !== _a8_ && 3257015 !== _a8_) break a;
      var p2$0 = _a7_[3], p1$0 = _a7_[2];
      if(caml_equal(p1$0, p2$0)) return caml_equal(p1$0, q);
     }
    }
    a:
    if(typeof q !== "number" && 748545548 === q[1]){
     var _a5_ = q[2], _a6_ = _a5_[1];
     if(typeof _a6_ === "number"){
      if(17731 !== _a6_ && 3257015 !== _a6_) break a;
      var p2 = _a5_[3], p1 = _a5_[2];
      if(caml_equal(p1, p2)) return caml_equal(p1, p);
     }
    }
    return 0;
   }
   function commutative(p, q){
    a:
    if(typeof p !== "number" && 748545548 === p[1]){
     var _a1_ = p[2], conn1 = _a1_[1];
     if(typeof conn1 === "number"){
      if(17731 !== conn1 && 3257015 !== conn1 && 3653065 !== conn1) break a;
      if(typeof q !== "number" && 748545548 === q[1]){
       var match = q[2], conn2 = match[1], q1 = _a1_[3], p1 = _a1_[2];
       if(typeof conn2 === "number"){
        if(17731 !== conn2 && 3257015 !== conn2 && 3653065 !== conn2) break a;
        var p2 = match[3], q2 = match[2], _a2_ = caml_equal(conn1, conn2);
        if(_a2_)
         var
          _a3_ = caml_equal(p1, p2),
          _a4_ = _a3_ ? caml_equal(q1, q2) : _a3_;
        else
         var _a4_ = _a2_;
        return _a4_;
       }
      }
     }
    }
    return 0;
   }
   function associative(p, q){
    if(typeof p !== "number" && 748545548 === p[1]){
     var _aD_ = p[2], _aE_ = _aD_[1];
     if(typeof _aE_ === "number")
      if(17731 === _aE_){
       var _aF_ = _aD_[2];
       if(typeof _aF_ !== "number" && 748545548 === _aF_[1]){
        var _aG_ = _aF_[2], _aH_ = _aG_[1];
        if
         (typeof _aH_ === "number"
          && 17731 === _aH_ && typeof q !== "number" && 748545548 === q[1]){
         var _aI_ = q[2], _aJ_ = _aI_[1];
         if(typeof _aJ_ === "number" && 17731 === _aJ_){
          var _aK_ = _aI_[3];
          if(typeof _aK_ !== "number" && 748545548 === _aK_[1]){
           var _aL_ = _aK_[2], _aM_ = _aL_[1];
           if(typeof _aM_ === "number" && 17731 === _aM_){
            var
             r2 = _aL_[3],
             q2 = _aL_[2],
             p2 = _aI_[2],
             r1 = _aD_[3],
             q1 = _aG_[3],
             p1 = _aG_[2],
             _aN_ = caml_equal(p1, p2);
            if(_aN_)
             var
              _aO_ = caml_equal(q1, q2),
              _aP_ = _aO_ ? caml_equal(r1, r2) : _aO_;
            else
             var _aP_ = _aN_;
            return _aP_;
           }
          }
         }
        }
       }
      }
      else if(3257015 === _aE_){
       var _aQ_ = _aD_[2];
       if(typeof _aQ_ !== "number" && 748545548 === _aQ_[1]){
        var _aR_ = _aQ_[2], _aS_ = _aR_[1];
        if
         (typeof _aS_ === "number"
          && 3257015 === _aS_ && typeof q !== "number" && 748545548 === q[1]){
         var _aT_ = q[2], _aU_ = _aT_[1];
         if(typeof _aU_ === "number" && 3257015 === _aU_){
          var _aV_ = _aT_[3];
          if(typeof _aV_ !== "number" && 748545548 === _aV_[1]){
           var _aW_ = _aV_[2], _aX_ = _aW_[1];
           if(typeof _aX_ === "number" && 3257015 === _aX_){
            var
             r2$0 = _aW_[3],
             q2$0 = _aW_[2],
             p2$0 = _aT_[2],
             r1$0 = _aD_[3],
             q1$0 = _aR_[3],
             p1$0 = _aR_[2],
             _aY_ = caml_equal(p1$0, p2$0);
            if(_aY_)
             var
              _aZ_ = caml_equal(q1$0, q2$0),
              _a0_ = _aZ_ ? caml_equal(r1$0, r2$0) : _aZ_;
            else
             var _a0_ = _aY_;
            return _a0_;
           }
          }
         }
        }
       }
      }
    }
    return 0;
   }
   function distributive(p, q){
    a:
    if(typeof p !== "number" && 748545548 === p[1]){
     var _D_ = p[2], _E_ = _D_[1];
     if(typeof _E_ === "number"){
      b:
      {
       c:
       {
        if(17731 === _E_){
         var _F_ = _D_[2], _G_ = _D_[3];
         if(typeof _G_ !== "number" && 748545548 === _G_[1]){
          var _V_ = _G_[2], _W_ = _V_[1];
          if
           (typeof _W_ === "number"
            && 3257015 === _W_ && typeof q !== "number" && 748545548 === q[1]){
           var _X_ = q[2], _Y_ = _X_[1];
           if(typeof _Y_ === "number" && 3257015 === _Y_){
            var _Z_ = _X_[2];
            if(typeof _Z_ !== "number" && 748545548 === _Z_[1]){
             var ___ = _Z_[2], _$_ = ___[1];
             if(typeof _$_ === "number" && 17731 === _$_){
              var _aa_ = _X_[3];
              if(typeof _aa_ !== "number" && 748545548 === _aa_[1]){
               var _ab_ = _aa_[2], _ac_ = _ab_[1];
               if(typeof _ac_ === "number" && 17731 === _ac_){
                var
                 r2$0 = _ab_[3],
                 p3$0 = _ab_[2],
                 q2$0 = ___[3],
                 p2$0 = ___[2],
                 r1$0 = _V_[3],
                 q1$0 = _V_[2],
                 p1$0 = _F_;
                break c;
               }
              }
             }
            }
           }
          }
         }
         if(typeof _F_ === "number") break a;
         if(748545548 !== _F_[1]) break a;
         var _H_ = _F_[2], _I_ = _H_[1];
         if(typeof _I_ !== "number") break a;
         if(3257015 !== _I_) break a;
         var _J_ = _D_[3];
         if(typeof _J_ === "number") break a;
         if(748545548 !== _J_[1]) break a;
         var _K_ = _J_[2], _L_ = _K_[1];
         if(typeof _L_ !== "number") break a;
         if(3257015 !== _L_) break a;
         if(typeof q === "number") break a;
         if(748545548 !== q[1]) break a;
         var _M_ = q[2], _N_ = _M_[1];
         if(typeof _N_ !== "number") break a;
         if(3257015 !== _N_) break a;
         var _O_ = _M_[3];
         if(typeof _O_ === "number") break a;
         if(748545548 !== _O_[1]) break a;
         var _P_ = _O_[2], _Q_ = _P_[1];
         if(typeof _Q_ !== "number") break a;
         if(17731 !== _Q_) break a;
         var
          r2 = _K_[3],
          p3 = _K_[2],
          q2 = _H_[3],
          p2 = _H_[2],
          r1 = _P_[3],
          q1 = _P_[2],
          p1 = _M_[2];
         break b;
        }
        if(3257015 !== _E_) break a;
        var _ah_ = _D_[2];
        if(typeof _ah_ !== "number" && 748545548 === _ah_[1]){
         var _at_ = _ah_[2], _au_ = _at_[1];
         if(typeof _au_ === "number" && 17731 === _au_){
          var _av_ = _D_[3];
          if(typeof _av_ !== "number" && 748545548 === _av_[1]){
           var _aw_ = _av_[2], _ax_ = _aw_[1];
           if
            (typeof _ax_ === "number"
             && 17731 === _ax_ && typeof q !== "number" && 748545548 === q[1]){
            var _ay_ = q[2], _az_ = _ay_[1];
            if(typeof _az_ === "number" && 17731 === _az_){
             var _aA_ = _ay_[3];
             if(typeof _aA_ !== "number" && 748545548 === _aA_[1]){
              var _aB_ = _aA_[2], _aC_ = _aB_[1];
              if(typeof _aC_ === "number" && 3257015 === _aC_){
               var
                r2$0 = _aw_[3],
                p3$0 = _aw_[2],
                q2$0 = _at_[3],
                p2$0 = _at_[2],
                r1$0 = _aB_[3],
                q1$0 = _aB_[2],
                p1$0 = _ay_[2];
               break c;
              }
             }
            }
           }
          }
         }
        }
        var _ai_ = _D_[3];
        if(typeof _ai_ === "number") break a;
        if(748545548 !== _ai_[1]) break a;
        var _aj_ = _ai_[2], _ak_ = _aj_[1];
        if(typeof _ak_ !== "number") break a;
        if(17731 !== _ak_) break a;
        if(typeof q === "number") break a;
        if(748545548 !== q[1]) break a;
        var _al_ = q[2], _am_ = _al_[1];
        if(typeof _am_ !== "number") break a;
        if(17731 !== _am_) break a;
        var _an_ = _al_[2];
        if(typeof _an_ === "number") break a;
        if(748545548 !== _an_[1]) break a;
        var _ao_ = _an_[2], _ap_ = _ao_[1];
        if(typeof _ap_ !== "number") break a;
        if(3257015 !== _ap_) break a;
        var _aq_ = _al_[3];
        if(typeof _aq_ === "number") break a;
        if(748545548 !== _aq_[1]) break a;
        var _ar_ = _aq_[2], _as_ = _ar_[1];
        if(typeof _as_ !== "number") break a;
        if(3257015 !== _as_) break a;
        var
         r2 = _ar_[3],
         p3 = _ar_[2],
         q2 = _ao_[3],
         p2 = _ao_[2],
         r1 = _aj_[3],
         q1 = _aj_[2],
         p1 = _ah_;
        break b;
       }
       var _ad_ = caml_equal(p1$0, p2$0);
       if(_ad_){
        var _ae_ = caml_equal(p2$0, p3$0);
        if(_ae_)
         var
          _af_ = caml_equal(q1$0, q2$0),
          _ag_ = _af_ ? caml_equal(r1$0, r2$0) : _af_;
        else
         var _ag_ = _ae_;
       }
       else
        var _ag_ = _ad_;
       return _ag_;
      }
      var _R_ = caml_equal(p1, p2);
      if(_R_){
       var _S_ = caml_equal(p2, p3);
       if(_S_)
        var _T_ = caml_equal(q1, q2), _U_ = _T_ ? caml_equal(r1, r2) : _T_;
       else
        var _U_ = _S_;
      }
      else
       var _U_ = _R_;
      return _U_;
     }
    }
    return 0;
   }
   function doublenegation(p, q){
    if(typeof p !== "number" && 3903731 === p[1]){
     var match$0 = p[2];
     if(typeof match$0 !== "number" && 3903731 === match$0[1]){var p1 = match$0[2]; return caml_equal(p1, q);}
    }
    if(typeof q !== "number" && 3903731 === q[1]){
     var match = q[2];
     if(typeof match !== "number" && 3903731 === match[1]){var p2 = match[2]; return caml_equal(p, p2);}
    }
    return 0;
   }
   function demorgans(p, q){
    a:
    if(typeof p !== "number"){
     var _o_ = p[1];
     if(3903731 === _o_){
      var _p_ = p[2];
      if(typeof _p_ !== "number" && 748545548 === _p_[1]){
       var _q_ = _p_[2], conn1 = _q_[1];
       if(typeof conn1 === "number"){
        if(17731 !== conn1 && 3257015 !== conn1) break a;
        if(typeof q !== "number" && 748545548 === q[1]){
         var _r_ = q[2], conn2 = _r_[1], q1 = _q_[3], p1 = _q_[2];
         if(typeof conn2 === "number"){
          if(17731 !== conn2 && 3257015 !== conn2) break a;
          var _s_ = _r_[2];
          if(typeof _s_ !== "number" && 3903731 === _s_[1]){
           var match = _r_[3];
           if(typeof match !== "number" && 3903731 === match[1]){
            var q2 = match[2], p2 = _s_[2], _t_ = caml_equal(conn1, conn2);
            if(_t_)
             var
              _u_ = caml_equal(p1, p2),
              _v_ = _u_ ? caml_equal(q1, q2) : _u_;
            else
             var _v_ = _t_;
            return _v_;
           }
          }
         }
        }
       }
      }
     }
     else if(748545548 === _o_){
      var _w_ = p[2], conn1$0 = _w_[1];
      if(typeof conn1$0 === "number"){
       if(17731 !== conn1$0 && 3257015 !== conn1$0) break a;
       var _x_ = _w_[2];
       if(typeof _x_ !== "number" && 3903731 === _x_[1]){
        var _y_ = _w_[3];
        if
         (typeof _y_ !== "number"
          && 3903731 === _y_[1] && typeof q !== "number" && 3903731 === q[1]){
         var _z_ = q[2];
         if(typeof _z_ !== "number" && 748545548 === _z_[1]){
          var
           match$0 = _z_[2],
           conn2$0 = match$0[1],
           q1$0 = _y_[2],
           p1$0 = _x_[2];
          if(typeof conn2$0 === "number"){
           if(17731 !== conn2$0 && 3257015 !== conn2$0) break a;
           var
            q2$0 = match$0[3],
            p2$0 = match$0[2],
            _A_ = caml_equal(conn1$0, conn2$0);
           if(_A_)
            var
             _B_ = caml_equal(p1$0, p2$0),
             _C_ = _B_ ? caml_equal(q1$0, q2$0) : _B_;
           else
            var _C_ = _A_;
           return _C_;
          }
         }
        }
       }
      }
     }
    }
    return 0;
   }
   function identity(p, q){
    a:
    if(typeof p !== "number" && 748545548 === p[1]){
     var _i_ = p[2], _j_ = _i_[1];
     if(typeof _j_ === "number"){
      if(17731 === _j_){
       var _k_ = _i_[2];
       b:
       {
        if(typeof _k_ !== "number" && 737456202 === _k_[1] && ! _k_[2]){var p1 = _i_[3]; break b;}
        var _l_ = _i_[3];
        if(typeof _l_ === "number") break a;
        if(737456202 !== _l_[1]) break a;
        if(_l_[2]) break a;
        var p1 = _k_;
       }
       return caml_equal(p1, q);
      }
      if(3257015 === _j_){
       var _m_ = _i_[2];
       b:
       {
        if(typeof _m_ !== "number" && 737456202 === _m_[1] && _m_[2]){var p1$0 = _i_[3]; break b;}
        var _n_ = _i_[3];
        if(typeof _n_ === "number") break a;
        if(737456202 !== _n_[1]) break a;
        if(! _n_[2]) break a;
        var p1$0 = _m_;
       }
       return caml_equal(p1$0, q);
      }
     }
    }
    return 0;
   }
   function dominance(p, q){
    a:
    if(typeof p !== "number" && 748545548 === p[1]){
     var _c_ = p[2], _d_ = _c_[1];
     if(typeof _d_ === "number"){
      if(17731 === _d_){
       var _e_ = _c_[2];
       b:
       {
        if(typeof _e_ !== "number" && 737456202 === _e_[1] && _e_[2]) break b;
        var _f_ = _c_[3];
        if(typeof _f_ === "number" || 737456202 !== _f_[1] || ! _f_[2])
         break a;
       }
       return caml_equal(_a_, q);
      }
      if(3257015 === _d_){
       var _g_ = _c_[2];
       b:
       {
        if(typeof _g_ !== "number" && 737456202 === _g_[1] && ! _g_[2])
         break b;
        var _h_ = _c_[3];
        if(typeof _h_ === "number" || 737456202 !== _h_[1] || _h_[2]) break a;
       }
       return caml_equal(_b_, q);
      }
     }
    }
    return 0;
   }
   function all_valid(lines){
    var getline = caml_call1(Stdlib_Hashtbl[6], lines);
    function aux(linenum, line, acc){
     return acc ? is_valid(getline, linenum) : acc;
    }
    return caml_call3(Stdlib_Hashtbl[14], aux, lines, 1);
   }
   var Dune_exe_Rules = [0, is_valid, all_valid];
   runtime.caml_register_global(3, Dune_exe_Rules, "Dune__exe__Rules");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
