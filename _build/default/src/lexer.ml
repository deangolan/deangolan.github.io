# 1 "src/lexer.mll"
 
open Parser

# 6 "src/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\222\255\001\000\001\000\000\000\003\000\001\000\002\000\
    \004\000\242\255\079\000\001\000\000\000\246\255\001\000\018\000\
    \012\000\021\000\249\255\250\255\251\255\252\255\253\255\254\255\
    \026\000\011\000\002\000\020\000\037\000\031\000\025\000\040\000\
    \237\255\238\255\248\255\239\255\240\255\247\255\073\000\235\255\
    \236\255\001\000\074\000\233\255\234\255\241\255\232\255\011\000\
    \231\255\012\000\230\255\016\000\229\255\226\255\227\255\013\000\
    \228\255\223\255\224\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\012\000\255\255\255\255\255\255\255\255\008\000\
    \255\255\007\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \001\000\001\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\010\000\255\255\
    \255\255\255\255\011\000\255\255\255\255\255\255\255\255\030\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default =
   "\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\255\255\255\255\000\000\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\255\255\000\000\000\000\000\000\255\255\
    \000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\026\000\026\000\026\000\026\000\026\000\000\000\026\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \026\000\000\000\026\000\000\000\000\000\000\000\015\000\000\000\
    \021\000\020\000\000\000\000\000\009\000\012\000\041\000\014\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\022\000\034\000\011\000\000\000\038\000\042\000\
    \000\000\004\000\000\000\005\000\003\000\047\000\018\000\046\000\
    \000\000\006\000\055\000\000\000\007\000\002\000\053\000\054\000\
    \008\000\058\000\049\000\051\000\019\000\057\000\045\000\035\000\
    \048\000\050\000\032\000\036\000\016\000\037\000\033\000\052\000\
    \056\000\023\000\023\000\023\000\023\000\023\000\024\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\025\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\029\000\017\000\027\000\013\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\028\000\019\000\030\000\031\000\018\000\039\000\043\000\
    \000\000\000\000\040\000\044\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\026\000\026\000\000\000\255\255\026\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\026\000\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\255\255\255\255\000\000\000\000\011\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\016\000\000\000\255\255\012\000\041\000\
    \255\255\000\000\255\255\000\000\000\000\006\000\000\000\007\000\
    \255\255\000\000\003\000\255\255\000\000\000\000\003\000\003\000\
    \000\000\002\000\005\000\004\000\000\000\002\000\008\000\015\000\
    \047\000\049\000\017\000\015\000\000\000\014\000\017\000\051\000\
    \055\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\024\000\000\000\025\000\000\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\027\000\028\000\029\000\030\000\031\000\038\000\042\000\
    \255\255\255\255\038\000\042\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec read lexbuf =
   __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 19 "src/lexer.mll"
                 ( read lexbuf )
# 144 "src/lexer.ml"

  | 1 ->
# 20 "src/lexer.mll"
           ( ATOM (Lexing.lexeme lexbuf) )
# 149 "src/lexer.ml"

  | 2 ->
# 21 "src/lexer.mll"
          ( COLON )
# 154 "src/lexer.ml"

  | 3 ->
# 22 "src/lexer.mll"
          ( LPAREN )
# 159 "src/lexer.ml"

  | 4 ->
# 23 "src/lexer.mll"
          ( RPAREN )
# 164 "src/lexer.ml"

  | 5 ->
# 24 "src/lexer.mll"
            ( BOOL true )
# 169 "src/lexer.ml"

  | 6 ->
# 25 "src/lexer.mll"
             ( BOOL false )
# 174 "src/lexer.ml"

  | 7 ->
# 26 "src/lexer.mll"
          ( OR )
# 179 "src/lexer.ml"

  | 8 ->
# 27 "src/lexer.mll"
           ( AND )
# 184 "src/lexer.ml"

  | 9 ->
# 28 "src/lexer.mll"
          ( NOT )
# 189 "src/lexer.ml"

  | 10 ->
# 29 "src/lexer.mll"
          ( IMP )
# 194 "src/lexer.ml"

  | 11 ->
# 30 "src/lexer.mll"
          ( IFF )
# 199 "src/lexer.ml"

  | 12 ->
# 31 "src/lexer.mll"
                 ( INT (int_of_string (Lexing.lexeme lexbuf)) )
# 204 "src/lexer.ml"

  | 13 ->
# 32 "src/lexer.mll"
          ( COMMA )
# 209 "src/lexer.ml"

  | 14 ->
# 33 "src/lexer.mll"
           ( PR )
# 214 "src/lexer.ml"

  | 15 ->
# 34 "src/lexer.mll"
           ( ANDINTRO )
# 219 "src/lexer.ml"

  | 16 ->
# 35 "src/lexer.mll"
           ( ANDELIM )
# 224 "src/lexer.ml"

  | 17 ->
# 36 "src/lexer.mll"
           ( ORINTRO )
# 229 "src/lexer.ml"

  | 18 ->
# 37 "src/lexer.mll"
           ( ORELIM )
# 234 "src/lexer.ml"

  | 19 ->
# 38 "src/lexer.mll"
            ( IMPINTRO )
# 239 "src/lexer.ml"

  | 20 ->
# 39 "src/lexer.mll"
            ( IMPELIM )
# 244 "src/lexer.ml"

  | 21 ->
# 40 "src/lexer.mll"
             ( IFFINTRO )
# 249 "src/lexer.ml"

  | 22 ->
# 41 "src/lexer.mll"
             ( IFFELIM )
# 254 "src/lexer.ml"

  | 23 ->
# 42 "src/lexer.mll"
           ( LE )
# 259 "src/lexer.ml"

  | 24 ->
# 43 "src/lexer.mll"
            ( IDM )
# 264 "src/lexer.ml"

  | 25 ->
# 44 "src/lexer.mll"
            ( COM )
# 269 "src/lexer.ml"

  | 26 ->
# 45 "src/lexer.mll"
            ( ASO )
# 274 "src/lexer.ml"

  | 27 ->
# 46 "src/lexer.mll"
            ( DIS )
# 279 "src/lexer.ml"

  | 28 ->
# 47 "src/lexer.mll"
           ( DN )
# 284 "src/lexer.ml"

  | 29 ->
# 48 "src/lexer.mll"
           ( DM )
# 289 "src/lexer.ml"

  | 30 ->
# 49 "src/lexer.mll"
           ( ID )
# 294 "src/lexer.ml"

  | 31 ->
# 50 "src/lexer.mll"
           ( MP )
# 299 "src/lexer.ml"

  | 32 ->
# 51 "src/lexer.mll"
           ( MT )
# 304 "src/lexer.ml"

  | 33 ->
# 52 "src/lexer.mll"
          ( EOF )
# 309 "src/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

;;

